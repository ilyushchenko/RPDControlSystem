@model IEnumerable<RPDControlSystem.Models.RPD.DisciplineInfo>

<div class="row">
    <div class="col-md-12">
        <div class="panel">
            <div class="panel-heading">
                <h3 class="text-uppercase">Отчет по дисциплинам с имеющимися документами РПД</h3>
            </div>
            <div class="panel-body">
                <form method="get" class="form-inline">
                    <div class="form-group">
                        <label for="type" class="form-check-label">Группировка по</label>
                        <select id="type" name="type" class="form-control">
                            <option value="@SortType.Plan">Плану</option>
                            <option value="@SortType.Qualification">Квалификации</option>
                            <option value="@SortType.Profile">Профилю</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <button class="btn btn-primary">Найти</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        @switch (ViewBag.Type)
        {
            case SortType.Plan:
                await Html.RenderPartialAsync("FindDisciplinesWithRpd_Plan", Model);
                break;
            case SortType.Qualification:
                await Html.RenderPartialAsync("FindDisciplinesWithRpd_Qualification", Model);
                break;
            case SortType.Profile:
                await Html.RenderPartialAsync("FindDisciplinesWithRpd_Profile", Model);
                break;

        }
        <!--<table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.DisciplineType)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Discipline)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Plan)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TeacherProfile)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.WorkPlan)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.DisciplineType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Discipline.Code)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Plan.Code)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TeacherProfile.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.WorkPlan.BaseName)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>-->
    </div>
</div>