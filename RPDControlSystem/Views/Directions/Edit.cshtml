@model RPDControlSystem.Models.RPD.Direction

@{
    ViewData["Title"] = "Edit";
}

<h2>Направления подготовки</h2>

<h4>Редактирование</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Code" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Qualification" class="control-label"></label>
                <select asp-for="Qualification" class="form-control">
                    <option value="@Qualification.Bachelor">Бакалавр</option>
                    <option value="@Qualification.Masetr">Магистр</option>
                    <option value="@Qualification.Specialist">Специалист</option>
                </select>
                <span asp-validation-for="Qualification" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<hr />

<div class="row">
    <div class="col-md-6">
        <h4>Компетенции направления</h4>
        @if (Model.Competencies != null && Model.Competencies.Count > 0)
        {
            Html.RenderPartial("_ShowCompetences", Model.Competencies);
        }
        else
        {
            <p>Компетенций нет</p>
        }
    </div>
    <div class="col-md-6">
        <h4>Добавить компетенцию</h4>
        @{Html.RenderPartial("_AddCompetence", new Competence() { DirectionCode = Model.Code });}
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
